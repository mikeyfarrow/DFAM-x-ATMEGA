
mafd-atmega-firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d1  00800100  00800100  00000244  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e7c  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ab  00000000  00000000  00002164  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002be  00000000  00000000  00002a0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00002cd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000039be  00000000  00000000  00002d24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000026  00000000  00000000  000066e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00006708  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__dtors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000068 <__ctors_start>:
  68:	c7 00       	.word	0x00c7	; ????

0000006a <__ctors_end>:
  6a:	ce 00       	.word	0x00ce	; ????

0000006c <__dtors_end>:
  6c:	11 24       	eor	r1, r1
  6e:	1f be       	out	0x3f, r1	; 63
  70:	cf ef       	ldi	r28, 0xFF	; 255
  72:	d8 e0       	ldi	r29, 0x08	; 8
  74:	de bf       	out	0x3e, r29	; 62
  76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_clear_bss>:
  78:	21 e0       	ldi	r18, 0x01	; 1
  7a:	a0 e0       	ldi	r26, 0x00	; 0
  7c:	b1 e0       	ldi	r27, 0x01	; 1
  7e:	01 c0       	rjmp	.+2      	; 0x82 <.do_clear_bss_start>

00000080 <.do_clear_bss_loop>:
  80:	1d 92       	st	X+, r1

00000082 <.do_clear_bss_start>:
  82:	a1 3d       	cpi	r26, 0xD1	; 209
  84:	b2 07       	cpc	r27, r18
  86:	e1 f7       	brne	.-8      	; 0x80 <.do_clear_bss_loop>

00000088 <__do_global_ctors>:
  88:	10 e0       	ldi	r17, 0x00	; 0
  8a:	c5 e3       	ldi	r28, 0x35	; 53
  8c:	d0 e0       	ldi	r29, 0x00	; 0
  8e:	04 c0       	rjmp	.+8      	; 0x98 <__do_global_ctors+0x10>
  90:	21 97       	sbiw	r28, 0x01	; 1
  92:	fe 01       	movw	r30, r28
  94:	0e 94 d5 00 	call	0x1aa	; 0x1aa <__tablejump2__>
  98:	c4 33       	cpi	r28, 0x34	; 52
  9a:	d1 07       	cpc	r29, r17
  9c:	c9 f7       	brne	.-14     	; 0x90 <__do_global_ctors+0x8>
  9e:	0e 94 c6 00 	call	0x18c	; 0x18c <main>
  a2:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__do_global_dtors>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <_Z41__static_initialization_and_destruction_0ii>:
{
    while (1)
    {
		
    }
}
  aa:	01 97       	sbiw	r24, 0x01	; 1
  ac:	09 f0       	breq	.+2      	; 0xb0 <_Z41__static_initialization_and_destruction_0ii+0x6>
  ae:	6d c0       	rjmp	.+218    	; 0x18a <_Z41__static_initialization_and_destruction_0ii+0xe0>
  b0:	6f 3f       	cpi	r22, 0xFF	; 255
  b2:	7f 4f       	sbci	r23, 0xFF	; 255
  b4:	09 f0       	breq	.+2      	; 0xb8 <_Z41__static_initialization_and_destruction_0ii+0xe>
  b6:	69 c0       	rjmp	.+210    	; 0x18a <_Z41__static_initialization_and_destruction_0ii+0xe0>
    , mThruFilterMode(Thru::Full)
    , mLastMessageSentTime(0)
    , mLastMessageReceivedTime(0)
    , mSenderActiveSensingPeriodicity(0)
    , mReceiverActiveSensingActivated(false)
    , mLastError(0)
  b8:	e0 e0       	ldi	r30, 0x00	; 0
  ba:	f1 e0       	ldi	r31, 0x01	; 1
  bc:	11 82       	std	Z+1, r1	; 0x01
  be:	10 82       	st	Z, r1
  c0:	13 82       	std	Z+3, r1	; 0x03
  c2:	12 82       	std	Z+2, r1	; 0x02
  c4:	15 82       	std	Z+5, r1	; 0x05
  c6:	14 82       	std	Z+4, r1	; 0x04
  c8:	17 82       	std	Z+7, r1	; 0x07
  ca:	16 82       	std	Z+6, r1	; 0x06
  cc:	11 86       	std	Z+9, r1	; 0x09
  ce:	10 86       	std	Z+8, r1	; 0x08
  d0:	13 86       	std	Z+11, r1	; 0x0b
  d2:	12 86       	std	Z+10, r1	; 0x0a
  d4:	15 86       	std	Z+13, r1	; 0x0d
  d6:	14 86       	std	Z+12, r1	; 0x0c
  d8:	17 86       	std	Z+15, r1	; 0x0f
  da:	16 86       	std	Z+14, r1	; 0x0e
  dc:	11 8a       	std	Z+17, r1	; 0x11
  de:	10 8a       	std	Z+16, r1	; 0x10
  e0:	13 8a       	std	Z+19, r1	; 0x13
  e2:	12 8a       	std	Z+18, r1	; 0x12
  e4:	15 8a       	std	Z+21, r1	; 0x15
  e6:	14 8a       	std	Z+20, r1	; 0x14
  e8:	17 8a       	std	Z+23, r1	; 0x17
  ea:	16 8a       	std	Z+22, r1	; 0x16
  ec:	11 8e       	std	Z+25, r1	; 0x19
  ee:	10 8e       	std	Z+24, r1	; 0x18
  f0:	13 8e       	std	Z+27, r1	; 0x1b
  f2:	12 8e       	std	Z+26, r1	; 0x1a
  f4:	15 8e       	std	Z+29, r1	; 0x1d
  f6:	14 8e       	std	Z+28, r1	; 0x1c
  f8:	17 8e       	std	Z+31, r1	; 0x1f
  fa:	16 8e       	std	Z+30, r1	; 0x1e
  fc:	11 a2       	std	Z+33, r1	; 0x21
  fe:	10 a2       	std	Z+32, r1	; 0x20
 100:	13 a2       	std	Z+35, r1	; 0x23
 102:	12 a2       	std	Z+34, r1	; 0x22
 104:	15 a2       	std	Z+37, r1	; 0x25
 106:	14 a2       	std	Z+36, r1	; 0x24
 108:	17 a2       	std	Z+39, r1	; 0x27
 10a:	16 a2       	std	Z+38, r1	; 0x26
 10c:	11 a6       	std	Z+41, r1	; 0x29
 10e:	10 a6       	std	Z+40, r1	; 0x28
 110:	80 ed       	ldi	r24, 0xD0	; 208
 112:	91 e0       	ldi	r25, 0x01	; 1
 114:	93 a7       	std	Z+43, r25	; 0x2b
 116:	82 a7       	std	Z+42, r24	; 0x2a
 118:	14 a6       	std	Z+44, r1	; 0x2c
 11a:	15 a6       	std	Z+45, r1	; 0x2d
 11c:	16 a6       	std	Z+46, r1	; 0x2e
 11e:	13 aa       	std	Z+51, r1	; 0x33
 120:	12 aa       	std	Z+50, r1	; 0x32
 122:	15 aa       	std	Z+53, r1	; 0x35
 124:	14 aa       	std	Z+52, r1	; 0x34
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	9f ef       	ldi	r25, 0xFF	; 255
 12a:	97 ab       	std	Z+55, r25	; 0x37
 12c:	86 ab       	std	Z+54, r24	; 0x36
 12e:	91 af       	std	Z+57, r25	; 0x39
 130:	80 af       	std	Z+56, r24	; 0x38
 132:	83 e0       	ldi	r24, 0x03	; 3
 134:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__DATA_REGION_ORIGIN__+0x3a>
    inline Message()
        : channel(0)
        , type(MIDI_NAMESPACE::InvalidType)
        , data1(0)
        , data2(0)
        , valid(false)
 138:	13 ae       	std	Z+59, r1	; 0x3b
 13a:	14 ae       	std	Z+60, r1	; 0x3c
 13c:	15 ae       	std	Z+61, r1	; 0x3d
 13e:	16 ae       	std	Z+62, r1	; 0x3e
 140:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <__DATA_REGION_ORIGIN__+0xbf>
    {
        memset(sysexArray, 0, sSysExMaxSize * sizeof(DataByte));
 144:	80 e8       	ldi	r24, 0x80	; 128
 146:	ef e3       	ldi	r30, 0x3F	; 63
 148:	f1 e0       	ldi	r31, 0x01	; 1
 14a:	df 01       	movw	r26, r30
 14c:	1d 92       	st	X+, r1
 14e:	8a 95       	dec	r24
 150:	e9 f7       	brne	.-6      	; 0x14c <_Z41__static_initialization_and_destruction_0ii+0xa2>
 152:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <__DATA_REGION_ORIGIN__+0xc2>
 156:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <__DATA_REGION_ORIGIN__+0xc3>
 15a:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <__DATA_REGION_ORIGIN__+0xc4>
 15e:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <__DATA_REGION_ORIGIN__+0xc5>
 162:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <__DATA_REGION_ORIGIN__+0xc6>
 166:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <__DATA_REGION_ORIGIN__+0xc7>
 16a:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <__DATA_REGION_ORIGIN__+0xc8>
 16e:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <__DATA_REGION_ORIGIN__+0xc9>
 172:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <__DATA_REGION_ORIGIN__+0xca>
 176:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <__DATA_REGION_ORIGIN__+0xcb>
 17a:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__DATA_REGION_ORIGIN__+0xcc>
 17e:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <__DATA_REGION_ORIGIN__+0xcd>
 182:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <__DATA_REGION_ORIGIN__+0xce>
 186:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <__DATA_REGION_ORIGIN__+0xcf>
 18a:	08 95       	ret

0000018c <main>:
#include "serialMIDI.h"

MIDI_CREATE_DEFAULT_INSTANCE()

int main(void)
{
 18c:	ff cf       	rjmp	.-2      	; 0x18c <main>

0000018e <_GLOBAL__sub_I_serialMIDI>:
    while (1)
    {
		
    }
}
 18e:	6f ef       	ldi	r22, 0xFF	; 255
 190:	7f ef       	ldi	r23, 0xFF	; 255
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	0e 94 55 00 	call	0xaa	; 0xaa <_Z41__static_initialization_and_destruction_0ii>
 19a:	08 95       	ret

0000019c <_GLOBAL__sub_D_serialMIDI>:
 19c:	6f ef       	ldi	r22, 0xFF	; 255
 19e:	7f ef       	ldi	r23, 0xFF	; 255
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 55 00 	call	0xaa	; 0xaa <_Z41__static_initialization_and_destruction_0ii>
 1a8:	08 95       	ret

000001aa <__tablejump2__>:
 1aa:	ee 0f       	add	r30, r30
 1ac:	ff 1f       	adc	r31, r31
 1ae:	05 90       	lpm	r0, Z+
 1b0:	f4 91       	lpm	r31, Z
 1b2:	e0 2d       	mov	r30, r0
 1b4:	09 94       	ijmp

000001b6 <__do_global_dtors>:
 1b6:	10 e0       	ldi	r17, 0x00	; 0
 1b8:	c5 e3       	ldi	r28, 0x35	; 53
 1ba:	d0 e0       	ldi	r29, 0x00	; 0
 1bc:	04 c0       	rjmp	.+8      	; 0x1c6 <__do_global_dtors+0x10>
 1be:	fe 01       	movw	r30, r28
 1c0:	0e 94 d5 00 	call	0x1aa	; 0x1aa <__tablejump2__>
 1c4:	21 96       	adiw	r28, 0x01	; 1
 1c6:	c6 33       	cpi	r28, 0x36	; 54
 1c8:	d1 07       	cpc	r29, r17
 1ca:	c9 f7       	brne	.-14     	; 0x1be <__do_global_dtors+0x8>
 1cc:	f8 94       	cli

000001ce <__stop_program>:
 1ce:	ff cf       	rjmp	.-2      	; 0x1ce <__stop_program>
